{{ 'section-main-page.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="page-width page-width--narrow section-{{ section.id }}-padding">
  <h1 class="main-page-title page-title h0{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    {{ page.title | escape }}
  </h1>
  <div class="rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    {{ page.content }}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.main-page.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}

<!-- Nitted Waitlist Minimal Landing Page Section with Animated, Large, Horizontal Product Gallery and Logo -->
<style>
  :root {
    --beige: #FAF5EF;
    --black: #000000;
    --radius: 2.2rem;
    --font-heading: 'Poppins', 'Satoshi', Arial, sans-serif;
    --font-body: 'Inter', 'Open Sans', Arial, sans-serif;
  }
  html, body {
    background: var(--beige) !important;
    color: var(--black);
    font-family: var(--font-body);
    font-weight: 400;
    margin: 0;
    padding: 0;
    height: 100vh;
    min-height: 100vh;
    overflow: auto;
  }
  body, .nitted-main {
    height: 100vh;
    width: 100vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: auto;
    background: var(--beige) !important;
  }
  .nitted-logo-img {
    display: block;
    position: fixed;
    top: 2.2rem;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    max-width: 140px;
    max-height: 70px;
    object-fit: contain;
    z-index: 10;
  }
  .nitted-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100vw;
    min-height: 100vh;
    padding-top: 7.5rem;
    padding-bottom: 2rem;
    box-sizing: border-box;
    background: var(--beige) !important;
  }
  .nitted-hero-title {
    font-family: var(--font-heading);
    font-size: 2.2rem;
    font-weight: 600;
    margin: 0 0 1.1rem 0;
    letter-spacing: 0.01em;
    text-align: center;
  }
  .nitted-hero-sub {
    font-size: 1.13rem;
    font-weight: 400;
    margin-bottom: 2.2rem;
    color: #222;
    text-align: center;
  }
  .nitted-email-form {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 520px;
    margin: 0 auto 1.1rem auto;
    gap: 0.7rem;
  }
  .nitted-email-input {
    width: 100%;
    padding: 1.5rem 1.5rem;
    border-radius: var(--radius);
    border: 1.5px solid #ece6dd;
    font-size: 1.25rem;
    font-family: var(--font-body);
    background: #fff;
    outline: none;
    transition: border 0.2s;
    text-align: center;
    color: var(--black);
    caret-color: var(--black);
    z-index: 1;
  }
  .nitted-email-input:focus {
    border: 1.5px solid var(--black);
  }
  .nitted-email-btn {
    width: 100%;
    padding: 1.5rem 0;
    border-radius: var(--radius);
    border: none;
    background: var(--black);
    color: var(--beige);
    font-family: var(--font-heading);
    font-size: 1.25rem;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s;
    margin-top: 0.5rem;
  }
  .nitted-email-btn:hover, .nitted-email-btn:focus {
    background: #222;
  }
  .nitted-hero-cta-sub {
    font-size: 1.05rem;
    color: #444;
    margin-top: 0.7rem;
    text-align: center;
    margin-bottom: 2.2rem;
  }
  .nitted-drop-text {
    font-family: var(--font-heading);
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--black);
    margin: 2.2rem 0 0.5rem 0;
    text-align: center;
    letter-spacing: 0.02em;
  }
  .nitted-countdown {
    font-family: var(--font-body);
    font-size: 1.1rem;
    color: #222;
    text-align: center;
    margin-bottom: 1.5rem;
    letter-spacing: 0.04em;
  }
  .nitted-infinite-gallery-outer {
    width: 100vw;
    height: 260px;
    overflow: hidden;
    position: relative;
    touch-action: pan-x;
    background: var(--beige);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .nitted-infinite-gallery-inner {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    will-change: transform;
    display: flex;
    align-items: center;
  }
  .nitted-infinite-img {
    height: 220px;
    width: auto;
    object-fit: contain;
    margin: 0 18px;
    user-select: none;
    pointer-events: none;
    background: none;
    border-radius: 0;
    box-shadow: none;
    display: block;
    transition: none;
  }
  @media (max-width: 700px) {
    .nitted-logo-img { max-width: 80px; max-height: 40px; top: 1.2rem; }
    .nitted-content { padding-top: 5.5rem; }
    .nitted-hero-title { font-size: 1.4rem; }
    .nitted-email-form { max-width: 98vw; }
    .nitted-email-input, .nitted-email-btn { font-size: 1rem; padding: 1.1rem 0.8rem; }
    .nitted-infinite-gallery-outer { height: 120px; }
    .nitted-infinite-img { height: 100px; margin: 0 8px; }
  }
</style>
<img src="{{ 'logo.png' | asset_url }}" alt="Nitted logo" class="nitted-logo-img" draggable="false">
<div class="nitted-content">
  <h1 class="nitted-hero-title">The Coziest Drop Is Coming ‚òÅÔ∏è</h1>
  <p class="nitted-hero-sub">Minimal essentials for comfort, calm, and everyday softness.</p>
  <form method="post" action="/contact#ContactFooter" id="ContactFooter" class="nitted-email-form" accept-charset="UTF-8" autocomplete="off">
    <input type="hidden" name="form_type" value="customer" />
    <input type="hidden" name="utf8" value="‚úì" />
    <input type="email" id="NewsletterForm--main" name="contact[email]" class="nitted-email-input" autocorrect="off" autocapitalize="off" autocomplete="email" placeholder="Enter your email" required>
    <button type="submit" class="nitted-email-btn">Join the Waitlist ‚Üí</button>
    {% if form.posted_successfully? %}
      <div class="nitted-newsletter-success" style="color:#1a4d1a; font-size:1.1rem; margin-top:1.2rem; text-align:center;">Thank you for joining the waitlist! You're on the list for first access and exclusive offers.</div>
    {% endif %}
    {% if form.errors %}
      <div class="nitted-newsletter-error" style="color:#b00; font-size:1rem; margin-top:0.5rem; text-align:center;">
        {{ form.errors | default_errors }}
      </div>
    {% endif %}
  </form>
  <div class="nitted-hero-cta-sub">You'll get first access & a secret discount üëÄ</div>
  <div class="nitted-drop-text">Dropping August 1st</div>
  <div class="nitted-countdown" id="nitted-countdown"></div>
  <div class="nitted-infinite-gallery-outer">
    <div class="nitted-infinite-gallery-inner" id="nitted-infinite-gallery-inner"></div>
  </div>
</div>
<script>
// Glitch-free, infinite, virtualized, drag-to-scroll horizontal gallery with autoscroll and max speed (no zoom)
(function() {
  var imageSources = [
    "{{ 'product-photo1.png' | asset_url }}",
    "{{ 'product-photo2.png' | asset_url }}",
    "{{ 'product-photo1.png' | asset_url }}",
    "{{ 'product-photo2.png' | asset_url }}"
  ];
  var outer = document.querySelector('.nitted-infinite-gallery-outer');
  var inner = document.getElementById('nitted-infinite-gallery-inner');
  var imgHeight = window.innerWidth < 700 ? 100 : 220;
  var imgMargin = window.innerWidth < 700 ? 8 : 18;
  var buffer = 1;
  var imgWidth = imgHeight;
  var MAX_VELOCITY = 3;
  var state = {
    offset: 0,
    dragging: false,
    dragStartX: 0,
    dragStartOffset: 0,
    leftMostIdx: 0,
    rafId: null,
    velocity: 0.15,
    lastX: 0,
    lastMoveTime: 0,
    userVelocity: 0,
    easing: false
  };

  function mod(n, m) {
    return ((n % m) + m) % m;
  }

  function createImg(idx) {
    var img = document.createElement('img');
    var safeIdx = mod(idx, imageSources.length);
    img.src = imageSources[safeIdx];
    img.alt = 'Nitted product photo ' + (safeIdx + 1);
    img.className = 'nitted-infinite-img';
    img.draggable = false;
    img.dataset.idx = idx;
    img.style.position = 'absolute';
    img.style.left = '0';
    img.style.top = '50%';
    img.style.transform = 'translateY(-50%)';
    img.style.transition = '';
    return img;
  }

  function fillImages() {
    inner.innerHTML = '';
    var vw = outer.offsetWidth;
    var n = Math.ceil(vw / (imgHeight + 2 * imgMargin)) + 2 * buffer;
    for (var i = 0; i < n; i++) {
      var img = createImg(state.leftMostIdx + i);
      inner.appendChild(img);
    }
    var firstImg = inner.querySelector('.nitted-infinite-img');
    if (firstImg) {
      imgWidth = firstImg.offsetWidth || imgHeight;
    } else {
      imgWidth = imgHeight;
    }
    state.offset = 0;
    updatePositions();
  }

  function updatePositions() {
    var imgs = Array.from(inner.children);
    var vw = outer.offsetWidth;
    var totalImgWidth = imgWidth + 2 * imgMargin;
    var centerX = vw / 2;
    imgs.forEach(function(img, i) {
      var idx = parseInt(img.dataset.idx, 10);
      var pos = (idx - state.leftMostIdx) * totalImgWidth + state.offset;
      img.style.left = (pos + centerX - imgWidth / 2) + 'px';
      img.style.transform = 'translateY(-50%)';
      img.style.zIndex = 1;
    });
  }

  function recycleIfNeeded() {
    var imgs = Array.from(inner.children);
    var totalImgWidth = imgWidth + 2 * imgMargin;
    var vw = outer.offsetWidth;
    // Recycle right
    while ((state.leftMostIdx + imgs.length - 1) * totalImgWidth + state.offset < -vw / 2) {
      inner.removeChild(inner.firstChild);
      var newIdx = parseInt(imgs[imgs.length - 1].dataset.idx, 10) + 1;
      inner.appendChild(createImg(newIdx));
      state.leftMostIdx++;
      imgs = Array.from(inner.children);
    }
    // Recycle left
    while (state.leftMostIdx * totalImgWidth + state.offset > vw / 2) {
      inner.removeChild(inner.lastChild);
      var newIdx = parseInt(imgs[0].dataset.idx, 10) - 1;
      inner.insertBefore(createImg(newIdx), inner.firstChild);
      state.leftMostIdx--;
      imgs = Array.from(inner.children);
    }
  }

  function rafUpdate() {
    if (state.velocity > MAX_VELOCITY) state.velocity = MAX_VELOCITY;
    if (state.velocity < -MAX_VELOCITY) state.velocity = -MAX_VELOCITY;
    if (!state.dragging) {
      state.offset -= state.velocity;
    }
    updatePositions();
    recycleIfNeeded();
    state.rafId = requestAnimationFrame(rafUpdate);
  }

  function onPointerDown(e) {
    state.dragging = true;
    state.dragStartX = e.type.startsWith('touch') ? e.touches[0].clientX : e.clientX;
    state.dragStartOffset = state.offset;
    state.lastX = state.dragStartX;
    state.lastMoveTime = Date.now();
    state.userVelocity = 0;
    state.easing = false;
    outer.style.cursor = 'grabbing';
  }
  function onPointerMove(e) {
    if (!state.dragging) return;
    var x = e.type.startsWith('touch') ? e.touches[0].clientX : e.clientX;
    var dx = x - state.dragStartX;
    state.offset = state.dragStartOffset + dx;
    var now = Date.now();
    var dt = now - state.lastMoveTime;
    if (dt > 0) {
      state.userVelocity = (x - state.lastX) / dt * 16;
    }
    state.lastX = x;
    state.lastMoveTime = now;
    updatePositions();
  }
  function onPointerUp(e) {
    state.dragging = false;
    outer.style.cursor = '';
    state.easing = true;
    easeToAutoscroll();
  }

  function easeToAutoscroll() {
    if (!state.easing) return;
    if (Math.abs(state.userVelocity) > 0.2) {
      state.velocity = state.userVelocity * 0.95 + 0.15 * 0.05;
      state.userVelocity *= 0.95;
      requestAnimationFrame(easeToAutoscroll);
    } else {
      state.velocity = 0.15;
      state.userVelocity = 0;
      state.easing = false;
    }
  }

  outer.addEventListener('mousedown', onPointerDown);
  window.addEventListener('mousemove', onPointerMove);
  window.addEventListener('mouseup', onPointerUp);
  outer.addEventListener('touchstart', onPointerDown, {passive:false});
  window.addEventListener('touchmove', onPointerMove, {passive:false});
  window.addEventListener('touchend', onPointerUp);
  outer.addEventListener('dragstart', function(e) { e.preventDefault(); });
  window.addEventListener('resize', function() {
    fillImages();
  });

  fillImages();
  rafUpdate();
})();

// Countdown timer
(function() {
  var countdownEl = document.getElementById('nitted-countdown');
  // Set to August 1st, 2024, midnight local time
  var target = new Date(2024, 7, 1, 0, 0, 0, 0); // Month is 0-indexed (7 = August)
  
  function updateCountdown() {
    var now = new Date();
    var diff = target - now;
    
    if (diff <= 0) {
      countdownEl.textContent = 'Drop is live!';
      return;
    }
    
    var days = Math.floor(diff / (1000*60*60*24));
    var hours = Math.floor((diff / (1000*60*60)) % 24);
    var mins = Math.floor((diff / (1000*60)) % 60);
    var secs = Math.floor((diff / 1000) % 60);
    
    countdownEl.textContent = days + 'd ' + hours + 'h ' + mins + 'm ' + secs + 's';
  }
  
  // Update immediately and then every second
  updateCountdown();
  setInterval(updateCountdown, 1000);
})();
</script>

